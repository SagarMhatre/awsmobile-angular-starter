>cd C:\Users\Laptop\Documents\Workspace
>cd  AWS
>npm install -g @angular/cli
>ng --version
	Angular CLI: 1.7.4
	Node: 8.9.4

>ng new awsmobile-angular-starter
>cd awsmobile-angular-starter

>git init
>git remote add origin https://github.com/SagarMhatre/awsmobile-angular-starter.git
>git push -u origin master

>npm install -g awsmobile-cli
>awsmobile --version
	1.1.2
	
Ref : https://aws.github.io/aws-amplify/media/angular_guide
>npm install --save aws-amplify
	+ aws-amplify@0.3.3
>npm install --save aws-amplify-angular
	+ aws-amplify-angular@0.1.0
>awsmobile init
	? What is your project's build command:  ng build
	? What is your project's start command for local test run:  ng serve

>awsmobile user-signin enable --prompt
	? Sign-in is currently disabled, what do you want to do next Go to advance settings
	? Which sign-in method you want to configure Cognito UserPools (currently disabled)
	? How are users going to login Email
	? Password minimum length (number of characters) 8
	? Password character requirements uppercase, lowercase, numbers, special characters
>awsmobile push

Rename aws_exports.js to aws_exports.ts
Import the configuration file and load it in your main.ts
Included the “node” package in types compiler option of tsconfig.app.json

Adding authenticator component with inline template
>ng g c authenticator -it

Changing code in node_module
The node_modules\aws-amplify-angular\src\components\authenticator\sign-in.component.ts 
has logic that always takes you to the node_modules\aws-amplify-angular\src\components\authenticator\confirm-sign-in.component.ts
where you are asked for MFA Code after successful sign in (does not check if MFA is required or not)
Code change :
	.then(() => {this.amplifyService.setAuthState({ state: 'confirmSignIn', user: user }); 	//previous
	.then(() => {this.amplifyService.setAuthState({ state: 'signedIn', user: user }); 		//changed
After making changes to the code in sign-in.component.ts,need to run 
	\node_modules\aws-amplify-angular>npm run build

Adding routing to an existing app ,
     in src\index.html
         <base href = "/">
     create file app/app.routing.module.ts with below contents
         import { NgModule } from '@angular/core';
         import { Routes, RouterModule } from '@angular/router';
 
         const routes: Routes = [];
 
         @NgModule({
         imports: [RouterModule.forRoot(routes)],
         exports: [RouterModule]
         })
         export class AppRoutingModule { }
     in src\app\app.module.ts
         import { AppRoutingModule } from './app-routing.module';
         imports: [    AppRoutingModule ...
    in the app.component.html
        <router-outlet></router-outlet>

>ng set defaults.styleExt scss
Manually rename teh .css extension to .scss

>npm i --save @angular/cdk @angular/material @angular/animations hammerjs
    + hammerjs@2.0.8
    + @angular/animations@5.2.10
    + @angular/cdk@5.2.5
    + @angular/material@5.2.5
Import the theme css in the styles.css
Import the BrowserAnimationsModule & modules for each component that we plan to use
Use the component tag as required